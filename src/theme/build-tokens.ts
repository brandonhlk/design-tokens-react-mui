import StyleDictionary from 'style-dictionary';

// Recursively transform Style Dictionary token objects into a TS-friendly object
const tokensToObject = (tokens: any): any => {
  if ('value' in tokens) {
    return tokens.value;
  }
  if (typeof tokens === 'object') {
    const result: Record<string, any> = {};
    for (const [key, val] of Object.entries(tokens)) {
      result[key] = tokensToObject(val);
    }
    return result;
  }
  return tokens;
};

StyleDictionary.registerFormat({
  name: 'typescript/nested-objects',
  format: function ({ dictionary }) {
    const nested = tokensToObject(dictionary.tokens);

    return `/**
 * Do not edit directly
 * Generated by Style Dictionary
 */

export const tokens = ${JSON.stringify(nested, null, 2)} as const;

export type Tokens = typeof tokens;
`;
  },
});

const sd = new StyleDictionary('./src/theme/style-dictionary.config.json');
sd.buildAllPlatforms();
